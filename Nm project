import pandas as pd
from surprise import Reader, Dataset
from surprise.model_selection import train_test_split
from surprise import SVD
from surprise import accuracy

# Load the dataset
ratings = pd.read_csv('ratings.csv')

# Build the dataset
reader = Reader(rating_scale=(1, 5))
data = Dataset.load_from_df(ratings[['userId', 'movieId', 'rating']], reader)

# Split the data into training and testing sets
trainset, testset = train_test_split(data, test_size=.25)

# Use the SVD algorithm
algo = SVD()

# Train the model
algo.fit(trainset)

# Make predictions
predictions = algo.test(testset)

# Evaluate the model
accuracy.rmse(predictions)
accuracy.mae(predictions)

# Get recommendations for a specific user
def get_recommendations(user_id, n=10):
    # Get the list of all movie IDs
    all_movie_ids = ratings['movieId'].unique()
    
    # Get the list of movies the user has already rated
    rated_movie_ids = ratings[ratings['userId'] == user_id]['movieId']
    
    # Get the list of unrated movies
    unrated_movie_ids = [movie_id for movie_id in all_movie_ids if movie_id not in rated_movie_ids]
    
    # Predict ratings for unrated movies
    predictions = [algo.predict(user_id, movie_id) for movie_id in unrated_movie_ids]
    
    # Sort predictions in descending order
    predictions.sort(key=lambda x: x.est, reverse=True)
    
    # Return the top N recommendations
    return predictions[:n]

# Test the recommendation function
user_id = 1
recommendations = get_recommendations(user_id)
for prediction in recommendations:
    print(f"Movie ID: {prediction.iid}, Estimated Rating: {prediction.est}")
